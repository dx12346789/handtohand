package com.qst.grade.po;

import javax.persistence.*;

@Entity
@Table(name = "goods_detail", schema = "hand_to_hand", catalog = "")
public class GoodsDetail {
    private String gDid;
    private String gid;
    private String specifications;
    private int count;
    private double price;
    private String imagePath;

    @Id
    @Column(name = "g_did")
    public String getgDid() {
        return gDid;
    }

    public void setgDid(String gDid) {
        this.gDid = gDid;
    }

    @Basic
    @Column(name = "gid")
    public String getGid() {
        return gid;
    }

    public void setGid(String gid) {
        this.gid = gid;
    }

    @Basic
    @Column(name = "specifications")
    public String getSpecifications() {
        return specifications;
    }

    public void setSpecifications(String specifications) {
        this.specifications = specifications;
    }

    @Basic
    @Column(name = "count")
    public int getCount() {
        return count;
    }

    public void setCount(int count) {
        this.count = count;
    }

    @Basic
    @Column(name = "price")
    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    @Basic
    @Column(name = "image_path")
    public String getImagePath() {
        return imagePath;
    }

    public void setImagePath(String imagePath) {
        this.imagePath = imagePath;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        GoodsDetail that = (GoodsDetail) o;

        if (count != that.count) return false;
        if (Double.compare(that.price, price) != 0) return false;
        if (gDid != null ? !gDid.equals(that.gDid) : that.gDid != null) return false;
        if (gid != null ? !gid.equals(that.gid) : that.gid != null) return false;
        if (specifications != null ? !specifications.equals(that.specifications) : that.specifications != null)
            return false;
        if (imagePath != null ? !imagePath.equals(that.imagePath) : that.imagePath != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result;
        long temp;
        result = gDid != null ? gDid.hashCode() : 0;
        result = 31 * result + (gid != null ? gid.hashCode() : 0);
        result = 31 * result + (specifications != null ? specifications.hashCode() : 0);
        result = 31 * result + count;
        temp = Double.doubleToLongBits(price);
        result = 31 * result + (int) (temp ^ (temp >>> 32));
        result = 31 * result + (imagePath != null ? imagePath.hashCode() : 0);
        return result;
    }
}
