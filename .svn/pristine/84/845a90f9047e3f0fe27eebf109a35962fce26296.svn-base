package com.qst.grade.action;

import com.opensymphony.xwork2.ActionContext;
import com.qst.grade.po.Favorite;
import com.qst.grade.po.Goods;
import com.qst.grade.po.User;
import com.qst.grade.service.FavoriteService;
import com.qst.grade.service.GoodsService;
import com.qst.grade.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import java.util.ArrayList;
import java.util.List;
@Controller
public class ShopAction {
    private String uid;
    private User user;
    private GoodsService goodsService;
    private UserService userService;
    private FavoriteService favoriteService;
    private List<Goods> goodsList;
    private List<Favorite> favoriteList;

    @Autowired
    public ShopAction(GoodsService goodsService,UserService userService,FavoriteService favoriteService) {
        this.goodsService = goodsService;
        this.userService = userService;
        this.favoriteService=favoriteService;
    }
    public String toShop(){
        favoriteList=new ArrayList<Favorite>();
        User user1 =(User)ActionContext.getContext().getSession().get("loginUser");
        user = userService.findByuId(uid);
        goodsList = goodsService.findGoodsByUid(uid);
        for (int i = 0;i<goodsList.size();i++){
            Goods goods=goodsList.get(i);
            System.out.println("gid="+goods.getGid());
            System.out.println("uid="+user1.getUid());
            Favorite favorite=new Favorite();
            favorite=favoriteService.findByGidUid(goods.getGid(),user1.getUid());
            if (favorite == null){
                continue;
            }
            System.out.println("fid="+favorite.getFid());
            favoriteList.add(favorite);
            System.out.println("favoriteSize="+favoriteList.size());
        }
        System.out.println("size="+goodsList.size());
        return "toshop";
    }

    public String getUid() {
        return uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    public List<Goods> getGoodsList() {
        return goodsList;
    }

    public void setGoodsList(List<Goods> goodsList) {
        this.goodsList = goodsList;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public List<Favorite> getFavoriteList() {
        return favoriteList;
    }

    public void setFavoriteList(List<Favorite> favoriteList) {
        this.favoriteList = favoriteList;
    }
}
